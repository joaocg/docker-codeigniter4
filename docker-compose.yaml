version: "3.8"

services:
  db:
    image: mysql:8.0
    container_name: ci4-mysql
    command:
      [
        "--default-authentication-plugin=mysql_native_password",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci"
      ]
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-ci4}
      MYSQL_USER: ${MYSQL_USER:-ci4}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-ci4}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-p${MYSQL_ROOT_PASSWORD:-root}"]
      interval: 5s
      timeout: 5s
      retries: 20

  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
      args:
        APACHE_DOCUMENT_ROOT: /var/www/html/public
    container_name: ci4-php
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:80"
    working_dir: /var/www/html
    volumes:
      # Monte o repositório inteiro para que o Apache sirva o /public corretamente
      - ./app:/var/www/html
      # Opcional: cache do Composer persiste entre rebuilds
      - composer_cache:/tmp/composer
    environment:
      # Opcional: injeta variáveis para o .env do CI4 (ou use env_file)
      CI_ENVIRONMENT: development

volumes:
  db_data:
  composer_cache:

networks:
  default:
    name: ci4-net